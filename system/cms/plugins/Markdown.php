<?php defined('BASEPATH') or exit('No direct script access allowed');
/**
 * OxygenCMS
 *
 * @author      OxygenCMS Dev Team 2015
 * @author      PyroCMS Dev Team 2008-2014
 * @copyright   Copyright (c) 2012, PyroCMS LLC
 * @copyright   Copyright (c) 2016, OxygenCMS 
 *
 */
/**
 * Format Plugin
 *
 * Various text formatting functions.
 *
 * @author  PyroCMS Dev Team
 * @package PyroCMS\Core\Plugins
 */
class Plugin_markdown extends Plugin
{

	public $version = '1.0.0';
	
	public $name = 
	[
		'en' => 'Markdown',
	];
	
	public $description = 
	[
		'en' => 'The markdown parser.',
	];

	/**
	 * Returns a PluginDoc array that PyroCMS uses 
	 * to build the reference in the admin panel
	 *
	 * All options are listed here but refer 
	 * to the Format plugin for a larger example
	 *
	 * @return array
	 */
	public function _self_doc()
	{
		$info = array(
			'markdown' => array(
				'description' => array(
					'en' => 'Send some content through the Markdown processor.',
				),
				'single' => false,
				'double' => true,
				'variables' => '',
				'attributes' => [],
			),
			
			'textile' => array(
				'description' => array(
					'en' => 'Send some content through the Textile processor.',
				),
				'single' => false,
				'double' => true,
				'variables' => '',
				'attributes' => [],
			),
			
			'url_title' => array(
				'description' => array(
					'en' => 'A Plugin shortcut to the CodeIgniter url_title() function.',
				),
				'single' => true,
				'double' => false,
				'variables' => '',
				'attributes' => array(
					'string' => array(
						'type' => 'text',
						'required' => true,
					),
					'separator' => array(
						'type' => 'text',
						'default' => 'dash',
						'required' => false,
					),
					'lowercase' => array(
						'type' => 'bool',
						'flags' => 'true|false',
						'default' => 'false',
						'required' => false,
					),
				),
			),
		);
	
		return $info;
	}

	/**
	 * Markdown
	 *
	 * Takes content and formats it with the Markdown Library.
	 *
	 * Usage:
	 * {{ markdown:parse }}
	 *   Formatted **text**
	 * {{ /markdown:parse }}
	 *
	 * Outputs: <p>Formatted <strong>text</strong></p>
	 *
	 * @return string The HTML generated by the Markdown Library.
	 */
	public function parse()
	{

		$content = $this->attribute('content', $this->content());

		$parser = new Oxygen\Parsers\Markdown\MarkDownParser();

		$parser->setUrlsLinked(false);

		return $parser->text($content);

	}
}
/* EOF */